package practice.aws.lambda;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.LambdaLogger;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.amazonaws.services.lambda.runtime.events.ApplicationLoadBalancerRequestEvent;
import com.amazonaws.services.lambda.runtime.events.ApplicationLoadBalancerResponseEvent;

import java.util.HashMap;
public class HandlerApiGatewayV1 implements RequestHandler<ApplicationLoadBalancerRequestEvent, ApplicationLoadBalancerResponseEvent>{

	@Override
	public ApplicationLoadBalancerResponseEvent handleRequest(ApplicationLoadBalancerRequestEvent event, Context context) {
		LambdaLogger logger = context.getLogger();
		logger.log("EVENT TYPE:====> " + event.getClass().toString());
		ApplicationLoadBalancerResponseEvent response = new ApplicationLoadBalancerResponseEvent();
		response.setIsBase64Encoded(false);
		//event.getBody().compareTo(null)
		response.setStatusCode(200);
		HashMap<String, String> headers = new HashMap<String, String>();
		headers.put("Content-Type", "text/html");
		response.setHeaders(headers);
		if(event.getBody()!=null)
		logger.log("Request event body::"+event.getBody());
		String body = event.getBody() != null ? event.getBody() : "Empty body";
		response.setBody("<!DOCTYPE html><html><head><title>" + body + "</title></head><body>"
				+ "<h1>Welcome</h1><p>Page generated by a Lambda function created by Gopal.</p>" + "</body></html>");
		return response;
	}
}